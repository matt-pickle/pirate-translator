{"version":3,"sources":["components/Button.js","components/InputBox.js","components/OutputBox.js","components/App.js","index.js"],"names":["Button","props","useState","hoverClass","setHoverClass","className","id","onMouseEnter","window","navigator","maxTouchPoints","msMaxTouchPoints","onMouseLeave","onTouchStart","onTouchEnd","onClick","text","InputBox","src","alt","name","value","placeholder","maxLength","onChange","handleChange","handleSubmit","OutputBox","pirateText","App","setText","setPirateText","event","target","fetch","then","res","ok","json","console","error","data","contents","translated","href","ReactDOM","render","document","getElementById"],"mappings":"sLA0CeA,MAxCf,SAAgBC,GAAQ,IAAD,EACeC,mBAAS,IADxB,mBACdC,EADc,KACFC,EADE,KA0BrB,OACE,4BAAQC,UAAS,iBAAYF,GACrBG,GAAIL,EAAMK,GACVC,aAzBV,WACM,iBAAkBC,QACjBC,UAAUC,eAAiB,GAC3BD,UAAUE,iBAAmB,EAC9BP,EAAc,IAEhBA,EAAc,YAoBRQ,aAhBV,WACER,EAAc,KAgBNS,aAbV,WACET,EAAc,YAaNU,WAVV,WACEV,EAAc,KAUNW,QAASd,EAAMc,SAEpBd,EAAMe,OChBEC,MAlBf,SAAkBhB,GAChB,OACE,yBAAKI,UAAU,uBACb,yBAAKA,UAAU,SAASa,IAAI,mBAAmBC,IAAI,WACnD,8BAAUC,KAAK,QACLf,UAAU,QACVgB,MAAOpB,EAAMe,KACbM,YAAY,8BACZC,UAAU,MACVC,SAAUvB,EAAMwB,eAE1B,kBAAC,EAAD,CAAQT,KAAK,YACLD,QAASd,EAAMyB,iBCLdC,MARf,SAAmB1B,GACjB,OACE,yBAAKI,UAAU,wBACb,uBAAGA,UAAU,eAAeJ,EAAM2B,cC4CzBC,MA7Cf,WAAgB,IAAD,EAEW3B,mBAAS,IAFpB,mBAENc,EAFM,KAEAc,EAFA,OAGuB5B,mBAAS,IAHhC,mBAGN0B,EAHM,KAGMG,EAHN,KAyBb,OACE,yBAAK1B,UAAU,iBACb,kBAAC,EAAD,CAAUW,KAAMA,EACNS,aAvBd,SAAsBO,GACpBF,EAAQE,EAAMC,OAAOZ,QAuBTK,aAnBd,SAAsBM,GACpBE,MAAM,8DAAgElB,GACrEmB,MAAK,SAAAC,GACJ,GAAIA,EAAIC,GACN,OAAOD,EAAIE,OAEXC,QAAQC,MAAM,uBACdT,EAAc,4EAGjBI,MAAK,SAAAM,GACJV,EAAcU,EAAKC,SAASC,kBAU5B,kBAAC,EAAD,CAAWf,WAAYA,IACvB,yBAAKvB,UAAU,+BACb,uBAAGuC,KAAK,0BAAR,gDAGA,uBAAGA,KAAK,wCAAR,4DCnCRC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.59025efe.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\n\r\nfunction Button(props) {\r\n  const [hoverClass, setHoverClass] = useState(\"\");\r\n\r\n  //Applies hover effect class if not using a touch screen\r\n  function hover() {\r\n    if (\"ontouchstart\" in window\r\n      || navigator.maxTouchPoints > 0\r\n      || navigator.msMaxTouchPoints > 0) {\r\n        setHoverClass(\"\")\r\n    } else {\r\n      setHoverClass(\"hovered\");\r\n    }\r\n  }\r\n\r\n  function unHover() {\r\n    setHoverClass(\"\");\r\n  }\r\n\r\n  function touch() {\r\n    setHoverClass(\"hovered\");\r\n  }\r\n\r\n  function unTouch() {\r\n    setHoverClass(\"\");\r\n  }\r\n\r\n  return (\r\n    <button className={`button ${hoverClass}`}\r\n            id={props.id}\r\n            onMouseEnter={hover}\r\n            onMouseLeave={unHover}\r\n            onTouchStart={touch}\r\n            onTouchEnd={unTouch}\r\n            onClick={props.onClick}\r\n    >\r\n      {props.text}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button","import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nfunction InputBox(props) {\r\n  return (\r\n    <div className=\"input-box-container\">\r\n      <img className=\"scroll\" src=\"scroll-small.png\" alt=\"scroll\"></img>\r\n      <textarea name=\"input\"\r\n                className=\"input\"\r\n                value={props.text}\r\n                placeholder=\"Type text to translate here\"\r\n                maxLength=\"200\"\r\n                onChange={props.handleChange}\r\n      />\r\n      <Button text=\"Translate\"\r\n              onClick={props.handleSubmit}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputBox;","import React from \"react\";\r\n\r\nfunction OutputBox(props) {\r\n  return (\r\n    <div className=\"output-box-container\">\r\n      <p className=\"output-text\">{props.pirateText}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OutputBox;","import React, {useState} from 'react';\nimport InputBox from \"./InputBox\";\nimport OutputBox from \"./OutputBox\";\n\nfunction App() {\n\n  const [text, setText] = useState(\"\");\n  const [pirateText, setPirateText] = useState(\"\");\n\n  function handleChange(event) {\n    setText(event.target.value);\n  }\n\n  //calls Pirate Translator API with text input and saves translation to state\n  function handleSubmit(event) {\n    fetch(\"https://api.funtranslations.com/translate/pirate.json?text=\" + text)\n    .then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        console.error(\"API Request Failed!\");\n        setPirateText(\"Error: Request Failed! (Probably exceeded the 5 calls per hour limit)\");\n      }\n    })\n    .then(data => {\n      setPirateText(data.contents.translated);\n    });    \n  }\n\n  return (\n    <div className=\"app-container\">\n      <InputBox text={text}\n                handleChange={handleChange}\n                handleSubmit={handleSubmit}\n      />\n      <OutputBox pirateText={pirateText}/>\n      <div className=\"attribution-links-container\">\n        <a href=\"http://www.freepik.com\">\n          parchment created by Brgfx - www.freepik.com\n        </a>  \n        <a href='https://www.freepik.com/vectors/tree'>\n          background image created by upklyak - www.freepik.com\n        </a>\n      </div>\n      \n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/styles.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}